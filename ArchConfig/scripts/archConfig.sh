#!/usr/bin/env bash

# Generated by Spellcaster ☱
# © 2023, Distinguished LLC. All rights reserved.

# Name: archConfig
# ID: 586312c4-af70-4c5c-8e93-25774c6dc7b8
# Description: A spell to configure a new Arch instance
# Identity: topherludlow@protonmail.com

exec 3>&1
exec > >(tee -a spellcaster.log) 2>&1

start_time="$(date -u +%s)"
echo -en "\033[0;37m"
cat << "EOF"
 __                        
(_ ._  _ || _ _. __|_ _ ._ 
__)|_)(/_||(_(_|_> |_(/_|  
   |                       
EOF

echo -e "Name: archConfig"
echo -e "ID: 586312c4-af70-4c5c-8e93-25774c6dc7b8"
echo -e "Description: A spell to configure a new Arch instance"
echo -e "Identity: topherludlow@protonmail.com"
echo -e "Converging 4 resources..."
converge=''
cycle=0
converged="$(printf "\xE2\x98\xB1%.0s "  $(seq 4))"
echo -en "\033[0m"

while [ "$converge" != "$converged" ] && [ $cycle -le 4 ]
  do
    converge=''
    if (pacman -Q lib32-nvidia-utils > /dev/null)
    then
      c_exit=0
      echo -en "\033[0;32m"
      echo -e "  \xE2\x9C\x93 32 bit Nvidia drivers should be installed"
      echo -en "\033[0m"
      u_exit=1
    else
      c_exit=1
      echo -en "\033[0;31m"
      echo -e "  \xE2\x9C\x97 32 bit Nvidia drivers should be installed"
      echo -en "\033[0m"
      u_out=$(sudo pacman -S lib32-nvidia-utils --noconfirm)
      u_exit=$?
    fi
    r_exit=$?
    # echo "$r_exit$c_exit$u_exit"
    # set any non zero value as 1 for read 
    if [ $r_exit -ne 0 ]; then r_exit=1; fi
    case "$r_exit$c_exit$u_exit" in
    000) converge="$converge$(printf "\xE2\x98\xB0") ";;
    001) converge="$converge$(printf "\xE2\x98\xB1") ";;
    010) converge="$converge$(printf "\xE2\x98\xB2") ";;
    011) converge="$converge$(printf "\xE2\x98\xB3") ";;
    100) converge="$converge$(printf "\xE2\x98\xB4") ";;
    101) converge="$converge$(printf "\xE2\x98\xB5") ";;
    110) converge="$converge$(printf "\xE2\x98\xB6") ";;
    111) converge="$converge$(printf "\xE2\x98\xB7") ";;
    esac

    if (locale --all-locales | grep -q "en_US.utf8" > /dev/null)
    then
      c_exit=0
      echo -en "\033[0;32m"
      echo -e "  \xE2\x9C\x93 en_US.UTF-8 locale should be generated"
      echo -en "\033[0m"
      u_exit=1
    else
      c_exit=1
      echo -en "\033[0;31m"
      echo -e "  \xE2\x9C\x97 en_US.UTF-8 locale should be generated"
      echo -en "\033[0m"
      u_out=$(sudo sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && sudo locale-gen)
      u_exit=$?
    fi
    r_exit=$?
    # echo "$r_exit$c_exit$u_exit"
    # set any non zero value as 1 for read 
    if [ $r_exit -ne 0 ]; then r_exit=1; fi
    case "$r_exit$c_exit$u_exit" in
    000) converge="$converge$(printf "\xE2\x98\xB0") ";;
    001) converge="$converge$(printf "\xE2\x98\xB1") ";;
    010) converge="$converge$(printf "\xE2\x98\xB2") ";;
    011) converge="$converge$(printf "\xE2\x98\xB3") ";;
    100) converge="$converge$(printf "\xE2\x98\xB4") ";;
    101) converge="$converge$(printf "\xE2\x98\xB5") ";;
    110) converge="$converge$(printf "\xE2\x98\xB6") ";;
    111) converge="$converge$(printf "\xE2\x98\xB7") ";;
    esac

    if (pacman -Q steam > /dev/null)
    then
      c_exit=0
      echo -en "\033[0;32m"
      echo -e "  \xE2\x9C\x93 Steam should be installed"
      echo -en "\033[0m"
      u_exit=1
    else
      c_exit=1
      echo -en "\033[0;31m"
      echo -e "  \xE2\x9C\x97 Steam should be installed"
      echo -en "\033[0m"
      u_out=$(sudo pacman -S steam --noconfirm)
      u_exit=$?
    fi
    r_exit=$?
    # echo "$r_exit$c_exit$u_exit"
    # set any non zero value as 1 for read 
    if [ $r_exit -ne 0 ]; then r_exit=1; fi
    case "$r_exit$c_exit$u_exit" in
    000) converge="$converge$(printf "\xE2\x98\xB0") ";;
    001) converge="$converge$(printf "\xE2\x98\xB1") ";;
    010) converge="$converge$(printf "\xE2\x98\xB2") ";;
    011) converge="$converge$(printf "\xE2\x98\xB3") ";;
    100) converge="$converge$(printf "\xE2\x98\xB4") ";;
    101) converge="$converge$(printf "\xE2\x98\xB5") ";;
    110) converge="$converge$(printf "\xE2\x98\xB6") ";;
    111) converge="$converge$(printf "\xE2\x98\xB7") ";;
    esac

    if (grep -A1 '^\[multilib\]$' /etc/pacman.conf | grep -q '^Include = /etc/pacman.d/mirrorlist$' > /dev/null)
    then
      c_exit=0
      echo -en "\033[0;32m"
      echo -e "  \xE2\x9C\x93 multilib should be enabled in pacman conf"
      echo -en "\033[0m"
      u_exit=1
    else
      c_exit=1
      echo -en "\033[0;31m"
      echo -e "  \xE2\x9C\x97 multilib should be enabled in pacman conf"
      echo -en "\033[0m"
      u_out=$(sudo sed -i '/^#\[multilib\]/{N;s/^#\[multilib\]\n#Include/[multilib]\nInclude/}' /etc/pacman.conf && sudo pacman -Sy --noconfirm)
      u_exit=$?
    fi
    r_exit=$?
    # echo "$r_exit$c_exit$u_exit"
    # set any non zero value as 1 for read 
    if [ $r_exit -ne 0 ]; then r_exit=1; fi
    case "$r_exit$c_exit$u_exit" in
    000) converge="$converge$(printf "\xE2\x98\xB0") ";;
    001) converge="$converge$(printf "\xE2\x98\xB1") ";;
    010) converge="$converge$(printf "\xE2\x98\xB2") ";;
    011) converge="$converge$(printf "\xE2\x98\xB3") ";;
    100) converge="$converge$(printf "\xE2\x98\xB4") ";;
    101) converge="$converge$(printf "\xE2\x98\xB5") ";;
    110) converge="$converge$(printf "\xE2\x98\xB6") ";;
    111) converge="$converge$(printf "\xE2\x98\xB7") ";;
    esac

    echo -e "cycle $cycle"
    echo -e "$converge"
    echo -e "$converged"
    cycle=$(( cycle+1 ))
done

end_time="$(date -u +%s)"


if [ "$converge" = "$converged" ]
then
  elapsed="$((end_time-start_time))"
  echo -en "\033[0;37m"
  echo -e "Spellcaster converged in $cycle cycles"
  echo -e "Convergence time: $elapsed seconds"
  (( RANDOM%20 == 0 )) && cat <<-EOF | base64 -d | gzip -dc
H4sIAAAAAAAAA7VX7W7aUAz9z1ODhkpQVyFt09SqanM/ENG0VatGxYfowrvcJ5l9bEMCBAJ0klWF
5N7r4+Nj+za5brrYIplLcQzDz0uP6lyyLZDvWXJ5co/JDc3oeZXCmj8RLP+/cRAIv06u10zSnQGa
tEdzJo6TINiyFIoU+8yQ0tPn9PkyxaIJ2Tk4AsVKID61WHzPK+MclAyZnvgzxTL5v/zyWhwMYmDP
sJ3gai8XWL8CoBIsUgBLxbfHSmscUc7daPPIYtMsuxzYm0rW+CvZl/NxcIEgoLBTq00mrCA7/qaN
i2YcQfy9sdCYVSHj1qq0SaqZLXhA0GuT6oTV2lw+nQbfJRyfTEF7GyosEe8epo7pC745o48p9mot
8rpGWTtEE/oZXjaYBEd8Z9rjnkkKwhJJWelLP4O+yP6A7brx1+/6NZR2Ts6p8SNN1r4jTty8w564
kB7wW3ZSUu5UAZwgaD6s8DdLcYU4ZsoZtQT29NsoNF49tvscrNxb2yD1/EhublERiFtUdS76eDA1
vTBjTABtGzNVbsTFEmYA1NXF7msKE/7KZwlKVDW1S8Khcpak0II+G3eOgs90UB7n5YUXeyG+ptNM
617VhEkWXplSdjOor6SUDVNcWmejiEdonfVSoo0ElJN7g+TOrAJ2+1BD3fIcARNCrITOI8MW+HfE
sarsKgFuui2E6FSMfOCSWWENHG4nh3Bw9eaYTGs8v2tM8Sn5OURAsKbJvSGmKdj+hmdK1jO4HKfw
xjOFw1hoIw+IhOR1qIsc5GMB+WCuksttEENryRXyY3eXqtqyDbUFnkkuT9shdQqHcRBfMZwyvUxw
NJtOQJVCfDxXOuwU4q12HWdK7EFAE+jsrHkrNSwScX3sL9QfFbD44G7xbHEjQWFmwyW3xQstKBGH
F4W2x6Gl6NF/5JR1Ja9H+r1g6qnOWGEe4qDk/lJM5+EglXgMbukNQqnkq3FLNbMFGtQAoi742kBE
XoTD0LBgl5omL81qfBTBWFuqTAPuhGvltdna3D8ye5AakVkzqXTYDQK5qed7IshOerno/wYHIbNg
K/demZenb9Efi0ONBpNchsvtTLnIrsQh9gF3pc4/2V8NtlgOAAA=
EOF
  echo -en "\033[0m"
  exit 0
else
  elapsed="$((end_time-start_time))"
  echo -en "\033[0;37m"
  echo -e "Spellcaster failed to converge in $cycle cycles"
  echo -e "Convergence time: $elapsed seconds"
  echo -en "\033[0m"
  exit 1
fi
